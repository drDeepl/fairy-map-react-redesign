{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signUp",
        "summary": "регистрация",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpRequestDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokensResponseDto" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseDto"
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AuthController"]
      }
    },
    "/api/auth/signin": {
      "post": {
        "operationId": "AuthController_signIn",
        "summary": "вход",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignInRequestDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokensResponseDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AuthController"]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "summary": " на обновление access token",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer refreshToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokensResponseDto" }
              }
            }
          },
          "400": { "description": "" },
          "401": { "description": "" }
        },
        "tags": ["AuthController"]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "summary": "выход из системы",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRequestExceptionDto"
                }
              }
            }
          }
        },
        "tags": ["AuthController"]
      }
    },
    "/api/api/user/me": {
      "get": {
        "operationId": "UserController_getCurrentUserInfo",
        "summary": "получение информации о текущем пользователе",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponseDto" }
              }
            }
          },
          "400": { "description": "" },
          "401": { "description": "" },
          "404": { "description": "" }
        },
        "tags": ["UserController"]
      }
    },
    "/api/api/user/{userId}": {
      "get": {
        "operationId": "UserController_findUserById",
        "summary": "получение информации о пользователе по его id",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponseDto" }
              }
            }
          },
          "400": { "description": "" },
          "401": { "description": "" },
          "404": { "description": "" }
        },
        "tags": ["UserController"]
      }
    },
    "/api/api/user/delete/{userId}": {
      "delete": {
        "operationId": "UserController_deleteUser",
        "summary": "удаленеи пользователя по его id",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponseDto" }
              }
            }
          },
          "400": { "description": "" },
          "401": { "description": "" },
          "404": { "description": "" }
        },
        "tags": ["UserController"]
      }
    },
    "/api/api/constituent/add": {
      "post": {
        "operationId": "ConstituentsController_addConstituent",
        "summary": "добавление субъекта РФ",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddConstituentDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstituentDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/add/ethnic-group": {
      "post": {
        "operationId": "ConstituentsController_addEthnicGroupToConstituent",
        "summary": "добавление этнической группы к субъекту рф",
        "description": "небходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEthnicGroupToConstituentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EthnicGroupToConstituentDto"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/ethnic-group/delete": {
      "delete": {
        "operationId": "ConstituentsController_deleteEthnicGroupFromConstituent",
        "summary": "удаление этнической группы у субъекта рф",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEthnicGroupToConstituentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EthnicGroupToConstituentDto"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/ethnic-group/{constituentId}": {
      "get": {
        "operationId": "ConstituentsController_getEthnicGroupByConstituentId",
        "summary": "получение этнической группы, принадлежащей субъекту рф",
        "parameters": [
          {
            "name": "constituentId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EthnicGroupToConstituentDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/all": {
      "get": {
        "operationId": "ConstituentsController_getConstituents",
        "summary": "получение всех субъектов",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ConstituentDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/edit/{id}": {
      "put": {
        "operationId": "ConstituentsController_editConstituent",
        "summary": "редактирование субъекта",
        "description": "небходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditConstituentDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/constituent/{id}": {
      "delete": {
        "operationId": "ConstituentsController_deleteConstituentById",
        "summary": "удаление данных субъекта",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["ConstituentController"]
      }
    },
    "/api/api/ethnic-group/add": {
      "post": {
        "operationId": "EthnicGroupController_addEthnicGroup",
        "summary": "добавление этнической группы",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddEthnicGroupDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/all": {
      "get": {
        "operationId": "EthnicGroupController_ethnicGroups",
        "summary": "получение списка этнических групп",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EthnicGroupLanguageDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/{ethnicGroupId}": {
      "get": {
        "operationId": "EthnicGroupController_getEthnicGroupById",
        "summary": "получение этнической группы по ethnicGroupId",
        "parameters": [
          {
            "name": "ethnicGroupId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupDto" }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/edit/{id}": {
      "put": {
        "operationId": "EthnicGroupController_editEthnicGroup",
        "summary": "редактирование этнической группы",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditEthnicGroupDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/{id}": {
      "delete": {
        "operationId": "EthnicGroupController_deleteEthnicGroup",
        "summary": "удаление этнической группы",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/language/add": {
      "post": {
        "operationId": "EthnicGroupController_addLanguage",
        "summary": "добавление языка этнической группы",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddLanguageDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/language/all": {
      "get": {
        "operationId": "EthnicGroupController_getAllLanguage",
        "summary": "получение списка всех языков",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LanguageDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/api/ethnic-group/language/{id}": {
      "delete": {
        "operationId": "EthnicGroupController_deleteLanguageById",
        "summary": "удаление языка по id",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" }
        },
        "tags": ["EthnicGroupController"]
      }
    },
    "/api/map/map.json": {
      "get": {
        "operationId": "MapController_getMapTopojson",
        "summary": "получить данные для отрисовки карты",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StreamableFile" }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/ethnic-groups": {
      "get": {
        "operationId": "MapController_getEthnicalGroupPoints",
        "summary": "получение точек этнических групп на карте",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EthnicGroupMapWithGroupDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/ethnic-groups/{constituentId}": {
      "get": {
        "operationId": "MapController_getEthnicalGroupPointsByConstituentId",
        "summary": "получение точек этнических групп по номеру региона",
        "parameters": [
          {
            "name": "constituentId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EthnicGroupMapPointEntity"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/ethnic-groups/{name}": {
      "get": {
        "operationId": "MapController_getEthnicGroupPointsByName",
        "summary": "получение точек этнических групп по названию этнической группы",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EthnicGroupMapPointEntityWithConstituents"
                  }
                }
              }
            }
          }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/ethnic-groups/{ethnicGroupId}": {
      "post": {
        "operationId": "MapController_addEthnicalGroupPoint",
        "summary": "добавление точки этнической группы на карту",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "ethnicGroupId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddEthnicGroupMapDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupMapDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/ethnic-groups/{pointId}": {
      "delete": {
        "operationId": "MapController_deleteEthnicalGroupPoint",
        "summary": "удаление точки этнической группы",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "pointId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EthnicGroupMapDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/map/constituents/filled": {
      "get": {
        "operationId": "MapController_getPercentsFilledStoriesByConstituentId",
        "summary": "получение списка субъектов и их заполненности озвучками",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConstituentFilledDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["MapController"]
      }
    },
    "/api/api/story/all": {
      "get": {
        "operationId": "StoryController_getAllStories",
        "summary": "получение всех сказок",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StoryDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/by-name/{name}": {
      "get": {
        "operationId": "StoryController_getStoryByName",
        "summary": "получение сказок в которых есть подстрока name",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StoryDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/{storyId}": {
      "get": {
        "operationId": "StoryController_getStoryById",
        "summary": "получение общей информации о выбранной сказке",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/languages/{storyId}": {
      "get": {
        "operationId": "StoryController_getLanguagesForCurrentStory",
        "summary": "получение доступных языков озвучки для выбранной сказки",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudioStoryLanguageDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/ethnic-group/{ethnicGroupId}": {
      "get": {
        "operationId": "StoryController_getStoriesByEthnicGroupId",
        "summary": "получение всех сказок выбранной этнической группы",
        "parameters": [
          {
            "name": "ethnicGroupId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StoryDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/add": {
      "post": {
        "operationId": "StoryController_addStory",
        "summary": "добавление сказки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddStoryDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/edit/{storyId}": {
      "put": {
        "operationId": "StoryController_editSotry",
        "summary": "редактирование сказки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditStoryDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/delete/{storyId}": {
      "delete": {
        "operationId": "StoryController_deleteStoryById",
        "summary": "удаление сказки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/text/add/{storyId}": {
      "post": {
        "operationId": "StoryController_addTextStory",
        "summary": "добавление текста сказки",
        "description": "небходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddTextStoryDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TextStoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/text/{storyId}": {
      "get": {
        "operationId": "StoryController_getTextStoryByStoryId",
        "summary": "получение текста сказки",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TextStoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/audio/{audioId}": {
      "get": {
        "operationId": "StoryController_getAudioStoryById",
        "summary": "получение одобренной озвучки по audioId",
        "description": "возвращает StreamableFile",
        "parameters": [
          {
            "name": "audioId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StreamableFile" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/audio": {
      "put": {
        "operationId": "StoryController_setUserAudioToStory",
        "summary": "добавление озвучки к сказке",
        "description": "пример запроса: /api/story/audio?storyId=8 | необходима роль администратора",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddAudioStoryDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/image/{storyId}": {
      "get": {
        "operationId": "StoryController_getImgStoryById",
        "summary": "получение обложки для сказки по storyId",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ImageStoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Image not found" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/image/upload/{storyId}": {
      "put": {
        "operationId": "StoryController_uploadStoryImage",
        "summary": "загрузка обложки для выбранной сказки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedImageStoryDto"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/image/delete/{storyId}": {
      "delete": {
        "operationId": "StoryController_deleteStoryImgByStoryId",
        "summary": "удаление обложки для выбранной сказки по storyId",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/rating/{audioId}": {
      "get": {
        "operationId": "StoryController_getRatingByAudioId",
        "summary": "получение оценки для выбранной озвучки",
        "parameters": [
          {
            "name": "audioId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RatingAudioStoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/rating/my/{userAudioId}": {
      "get": {
        "operationId": "StoryController_getRatingByAudioIdForCurrentUser",
        "summary": "получение оценки для выбранной озвучки для текущего пользователя",
        "parameters": [
          {
            "name": "userAudioId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RatingAudioStoryDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/story/rating/add": {
      "put": {
        "operationId": "StoryController_addRatingForStoryByCurrentUser",
        "summary": "добавление текущим пользователем оценки к озвучке по audioId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRatingAudioStoryDto"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["StoryController"]
      }
    },
    "/api/api/user-audio/my-audios": {
      "get": {
        "operationId": "UserAudioController_getCurrentUserAudios",
        "summary": "получение озвучек текущего пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserAudioDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["UserAudioController"]
      }
    },
    "/api/api/user-audio/my-audios/approved": {
      "get": {
        "operationId": "UserAudioController_getApprovedUserAudiosCurrentUser",
        "summary": "получение одобренных озвучек текущего пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovedUserAudioDto"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["UserAudioController"]
      }
    },
    "/api/api/user-audio/{userAudioId}": {
      "get": {
        "operationId": "UserAudioController_getUserAudioById",
        "summary": "получение файла озвучки пользователя",
        "parameters": [
          {
            "name": "userAudioId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StreamableFile" }
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "tags": ["UserAudioController"]
      }
    },
    "/api/api/user-audio/upload/{languageId}": {
      "put": {
        "operationId": "UserAudioController_uploadUserAudio",
        "summary": "загрузка озвучки пользователя для выбранного языка",
        "description": "в теле запроса(body) файл прикрепляется к полю file",
        "parameters": [
          {
            "name": "languageId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAudioDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["UserAudioController"]
      }
    },
    "/api/api/user-audio/delete/{userAudioId}": {
      "delete": {
        "operationId": "UserAudioController_deleteUserAudioById",
        "summary": "удаление озвучки пользователя",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "userAudioId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BaseUserAudioDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["UserAudioController"]
      }
    },
    "/api/api/audio-story-request/my-requests": {
      "get": {
        "operationId": "AudioStoryRequestController_getAllAudioStoryRequestsCurrentUser",
        "summary": "получение всех заявок на озвучки текущего пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudioStoryRequestEntity"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/audio-story-request/all": {
      "get": {
        "operationId": "AudioStoryRequestController_getAllAudioStoryRequests",
        "summary": "получение всех заявок на озвучки",
        "description": "необходимы роль модератора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudioStoryRequestEntity"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/audio-story-request/by-user/{userId}": {
      "get": {
        "operationId": "AudioStoryRequestController_getAllAudioStoryReqeustsByUserId",
        "summary": "получение всех заявок на озвучки для выбранного пользователя.",
        "description": "Необходима роль модератора",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudioStoryRequestEntity"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/audio-story-request/add": {
      "post": {
        "operationId": "AudioStoryRequestController_createAddAudioRequest",
        "summary": "Создание заявки на проверку озвучки",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAudioStoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioStoryRequestEntity"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/audio-story-request/edit/{audioStoryReqeustId}": {
      "put": {
        "operationId": "AudioStoryRequestController_editAudioStoryRequest",
        "summary": "редактирование заявки на проверку озвучки",
        "description": "необходима роль модератора. после редактирования, отредактированная запись по вебсокету отправляется пользователю из userId(создавшему заявку) в событие с названием \"statuses\"",
        "parameters": [
          {
            "name": "audioStoryReqeustId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAudioStoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioStoryRequestEntity"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/audio-story-request/delete/{audioStoryRequestId}": {
      "delete": {
        "operationId": "AudioStoryRequestController_deleteAudioStoryRequestBydId",
        "summary": "удаление заявки на проверку озвучки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "audioStoryRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AudioStoryRequestController"]
      }
    },
    "/api/api/request/type/all": {
      "get": {
        "operationId": "RequestController_getAllRequestTypes",
        "summary": "получение списка всех типов заявок",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TypeRequestDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/request/type/{typeRequestId}": {
      "get": {
        "operationId": "RequestController_getTypeRequestById",
        "summary": "получение типа заявки по id",
        "parameters": [
          {
            "name": "typeRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TypeRequestDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/request/type/add": {
      "post": {
        "operationId": "RequestController_addTypeRequest",
        "summary": "добавление типа заявки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddTypeRequestDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TypeRequestDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/request/type/edit/{typeRequestId}": {
      "put": {
        "operationId": "RequestController_editTypeRequest",
        "summary": "редактирование типа заявки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "typeRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditTypeRequestDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TypeRequestDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/request/type/delete/{typeRequestId}": {
      "delete": {
        "operationId": "RequestController_deleteTypeRequestById",
        "summary": "удаление типа заявки",
        "description": "необходима роль администратора",
        "parameters": [
          {
            "name": "typeRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/request/status/all": {
      "get": {
        "operationId": "RequestController_getRequestStatuses",
        "summary": "получение существующих статусов для заявок",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["RequestController"]
      }
    },
    "/api/api/add-story-request/all": {
      "get": {
        "operationId": "AddStoryRequestController_getAddStoryRequestAll",
        "summary": "получение всех заявок на добавление сказки",
        "description": "необходима роль администратора. пример запроса: /api/add-story-request/all?start=1&count=10",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "description": "номер первого элемента",
            "schema": { "type": "number" }
          },
          {
            "name": "count",
            "required": true,
            "in": "query",
            "description": "количество элементов",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddStoryRequestEntity"
                  }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    },
    "/api/api/add-story-request/my-requests": {
      "get": {
        "operationId": "AddStoryRequestController_getAddStoryRequestForCurrentUser",
        "summary": "получение всех заявок на добавление сказки от текущего пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AddStoryRequestDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    },
    "/api/api/add-story-request/by-user/{userId}": {
      "get": {
        "operationId": "AddStoryRequestController_getAddStoryRequestByUserId",
        "summary": "получение всех заявок на добавление сказки для выбранного пользователя",
        "description": "необходима роль администратора.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AddStoryRequestDto" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    },
    "/api/api/add-story-request/create": {
      "post": {
        "operationId": "AddStoryRequestController_createAddStoryRequestForCurrentUser",
        "summary": "создание заявки на добавление сказки",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddStoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddStoryRequestDto" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    },
    "/api/api/add-story-request/edit/{addStoryRequestId}": {
      "put": {
        "operationId": "AddStoryRequestController_editStatusAddStoryReqeust",
        "summary": "обновление заявки",
        "description": "необходима роль администратора. статус заявки берется из /api/request/status/all | Необходима роль moder | После успешного редактирования данные заявки так же передаются пользователю с userId по веб-сокету",
        "parameters": [
          {
            "name": "addStoryRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddStoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddStoryRequestEntity"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    },
    "/api/api/add-story-request/delete/{addStoryRequestId}": {
      "delete": {
        "operationId": "AddStoryRequestController_deleteAddStoryRequestById",
        "summary": "удаление заявки",
        "description": "Необходима роль администратора",
        "parameters": [
          {
            "name": "addStoryRequestId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Пример: Bearer accessToken",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["AddStoryRequestController"]
      }
    }
  },
  "info": {
    "title": "REST API приложения для интерактивной карты сказок различных народов России",
    "description": "API Проект представляет собой интерфейс для управления данными для интерактивной карты, на котором размещена карта России. Пользователь может выбрать регион, а затем этническую группу и язык, чтобы прослушать сказку, соответствующую этой группе.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [{ "url": "http://saintmolly.ru:3005" }],
  "components": {
    "securitySchemes": {
      "JWT-Auth": {
        "scheme": "bearer\"SWAGGER_BEARER_IN=\"header",
        "bearerFormat": "bearer",
        "type": "http\"SWAGGER_BEARER_FORMAT=\"bearer",
        "in": "header"
      }
    },
    "schemas": {
      "SignUpRequestDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "description": "", "nullable": false },
          "password": {
            "type": "string",
            "description": "",
            "nullable": false
          },
          "firstName": {
            "type": "string",
            "description": "",
            "nullable": false
          },
          "lastName": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["email", "password", "firstName", "lastName"]
      },
      "TokensResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "access token",
            "nullable": false
          },
          "refreshToken": {
            "type": "string",
            "description": "refresh token",
            "nullable": false
          }
        },
        "required": ["accessToken", "refreshToken"]
      },
      "ValidationExceptionResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "статус код",
            "nullable": false
          },
          "message": {
            "type": "string",
            "description": "описание ошибки",
            "nullable": false
          },
          "validationErrors": {
            "type": "object",
            "description": "объекто с полями и массивом ошибок их",
            "nullable": false,
            "example": { "propertyName": ["message1", "message2"] }
          }
        },
        "required": ["statusCode", "message", "validationErrors"]
      },
      "SignInRequestDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "description": "", "nullable": false },
          "password": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["email", "password"]
      },
      "BadRequestDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "message": {
            "description": "",
            "nullable": false,
            "type": "array",
            "items": { "type": "string" }
          },
          "error": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["statusCode", "message", "error"]
      },
      "BaseRequestExceptionDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["statusCode"]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "",
            "nullable": false
          },
          "lastName": {
            "type": "string",
            "description": "",
            "nullable": false
          },
          "email": { "type": "string", "description": "", "nullable": false },
          "role": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["firstName", "lastName", "email", "role", "id"]
      },
      "AddConstituentDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["name"]
      },
      "ConstituentDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["name", "id"]
      },
      "AddEthnicGroupToConstituentDto": {
        "type": "object",
        "properties": {
          "constituentRfId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["constituentRfId", "ethnicGroupId"]
      },
      "EthnicGroupToConstituentDto": {
        "type": "object",
        "properties": {
          "constituentRfId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["constituentRfId", "ethnicGroupId", "id"]
      },
      "DeleteEthnicGroupToConstituentDto": {
        "type": "object",
        "properties": {
          "constituentRfId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["constituentRfId", "ethnicGroupId"]
      },
      "EditConstituentDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "languageId"]
      },
      "AddEthnicGroupDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "languageId"]
      },
      "EthnicGroupDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["name", "languageId", "id"]
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["name", "id"]
      },
      "EthnicGroupLanguageDto": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "description": "", "nullable": false },
          "name": { "type": "string", "description": "", "nullable": false },
          "language": {
            "description": "",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/LanguageDto" }]
          }
        },
        "required": ["id", "name", "language"]
      },
      "EditEthnicGroupDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "languageId"]
      },
      "AddLanguageDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["name"]
      },
      "StreamableFile": { "type": "object", "properties": {} },
      "EthnicGroupMapWithGroupDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "географическая долгота",
            "nullable": false
          },
          "latitude": {
            "type": "number",
            "description": "географическая широта",
            "nullable": false
          },
          "ethnicGroup": {
            "description": "",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/EthnicGroupDto" }]
          }
        },
        "required": ["longitude", "latitude", "ethnicGroup"]
      },
      "EthnicGroupMapPointEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "description": "", "nullable": false },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "longitude": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "latitude": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["id", "ethnicGroupId", "longitude", "latitude"]
      },
      "EthnicGroupMapPointEntityWithConstituents": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "description": "", "nullable": false },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "longitude": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "latitude": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "constituent": {
            "description": "объект региона",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/ConstituentDto" }]
          }
        },
        "required": [
          "id",
          "ethnicGroupId",
          "longitude",
          "latitude",
          "constituent"
        ]
      },
      "AddEthnicGroupMapDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "географическая долгота",
            "nullable": false
          },
          "latitude": {
            "type": "number",
            "description": "географическая широта",
            "nullable": false
          },
          "constituentId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["longitude", "latitude", "constituentId"]
      },
      "EthnicGroupMapDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "географическая долгота",
            "nullable": false
          },
          "latitude": {
            "type": "number",
            "description": "географическая широта",
            "nullable": false
          },
          "id": { "type": "number", "description": "", "nullable": false },
          "constituentId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["longitude", "latitude", "id", "constituentId"]
      },
      "ConstituentFilledDto": {
        "type": "object",
        "properties": {
          "constituentId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "ethnicGroupCount": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "filled": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["constituentId", "ethnicGroupCount", "filled"]
      },
      "StoryDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false },
          "audioId": { "type": "number", "description": "", "nullable": true },
          "ethnicGroup": {
            "description": "",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/EthnicGroupDto" }]
          }
        },
        "required": ["name", "id", "audioId", "ethnicGroup"]
      },
      "AuthorUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "номер пользователя",
            "nullable": false
          },
          "firstName": {
            "type": "string",
            "description": "имя пользователя",
            "nullable": false
          },
          "lastName": {
            "type": "string",
            "description": "фамилия пользователя",
            "nullable": false
          }
        },
        "required": ["id", "firstName", "lastName"]
      },
      "AudioStoryLanguageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "audioStoryId ",
            "nullable": false
          },
          "userAudioId": {
            "type": "number",
            "description": "ид озвучки пользователя",
            "nullable": false
          },
          "moderateScore": {
            "type": "number",
            "description": "средняя оценка озвучки",
            "nullable": false
          },
          "language": {
            "description": "информация о языке",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/LanguageDto" }]
          },
          "authors": {
            "description": "информация об авторе",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/AuthorUserDto" }]
          }
        },
        "required": [
          "id",
          "userAudioId",
          "moderateScore",
          "language",
          "authors"
        ]
      },
      "AddStoryDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "ethnicGroupId"]
      },
      "EditStoryDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "ethnicGroupId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "ethnicGroupId"]
      },
      "AddTextStoryDto": {
        "type": "object",
        "properties": {
          "text": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["text"]
      },
      "TextStoryDto": {
        "type": "object",
        "properties": {
          "text": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["text", "id"]
      },
      "AddAudioStoryDto": {
        "type": "object",
        "properties": {
          "userAudioId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "userId": { "type": "number", "description": "", "nullable": false },
          "moderateScore": {
            "type": "number",
            "description": "оценка от проверяющего",
            "nullable": false
          }
        },
        "required": ["userAudioId", "userId", "moderateScore"]
      },
      "Buffer": { "type": "object", "properties": {} },
      "ImageStoryDto": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "",
            "nullable": false
          },
          "buffer": {
            "description": "",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/Buffer" }]
          }
        },
        "required": ["filename", "buffer"]
      },
      "CreatedImageStoryDto": {
        "type": "object",
        "properties": {
          "storyId": {
            "type": "number",
            "description": "ид сказки",
            "nullable": false
          },
          "id": {
            "type": "number",
            "description": "номер изображения(storyImageId)",
            "nullable": false
          }
        },
        "required": ["storyId", "id"]
      },
      "RatingAudioStoryDto": {
        "type": "object",
        "properties": {
          "audioId": {
            "type": "number",
            "description": "номер озвучки",
            "nullable": false
          },
          "ratingAudio": {
            "type": "number",
            "description": "среднее значение озвучки",
            "nullable": false
          }
        },
        "required": ["audioId", "ratingAudio"]
      },
      "AddRatingAudioStoryDto": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "номер озвучки из таблицы опубликованных озвучек",
            "nullable": false
          },
          "audioId": { "type": "number", "description": "номер озвучки" }
        },
        "required": ["rating", "audioId"]
      },
      "UserAudioDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "id": {
            "type": "number",
            "description": "userAudioId",
            "nullable": false
          }
        },
        "required": ["name", "languageId", "id"]
      },
      "ApprovedUserAudioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "storyAudioId(ид опубликованной озвучки)",
            "nullable": false
          },
          "userAudio": {
            "description": "данные озвучки пользователя",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/UserAudioDto" }]
          },
          "author": {
            "type": "number",
            "description": "id пользователя(автора)",
            "nullable": false
          },
          "story": {
            "description": "storyAudioId(ид опубликованной озвучки)",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/StoryDto" }]
          }
        },
        "required": ["id", "userAudio", "author", "story"]
      },
      "BaseUserAudioDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "languageId": {
            "type": "number",
            "description": "",
            "nullable": false
          }
        },
        "required": ["name", "languageId"]
      },
      "AudioStoryRequestEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "userId": { "type": "number" },
          "userAudioId": { "type": "number" },
          "status": { "type": "string" },
          "typeId": { "type": "number" },
          "storyId": { "type": "number" },
          "comment": { "type": "string" }
        },
        "required": [
          "id",
          "userId",
          "userAudioId",
          "status",
          "typeId",
          "storyId",
          "comment"
        ]
      },
      "AddAudioStoryRequestDto": {
        "type": "object",
        "properties": {
          "typeId": { "type": "number", "description": "", "nullable": false },
          "userAudioId": {
            "type": "number",
            "description": "",
            "nullable": false
          },
          "userId": {
            "type": "number",
            "description": "ид пользователя, создавшего заявку",
            "nullable": false
          },
          "storyId": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["typeId", "userAudioId", "userId", "storyId"]
      },
      "EditAudioStoryRequestDto": {
        "type": "object",
        "properties": {
          "comment": { "type": "string", "description": "", "nullable": false },
          "status": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["comment", "status"]
      },
      "TypeRequestDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false },
          "id": { "type": "number", "description": "", "nullable": false }
        },
        "required": ["name", "id"]
      },
      "AddTypeRequestDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["name"]
      },
      "EditTypeRequestDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "", "nullable": false }
        },
        "required": ["name"]
      },
      "AddStoryRequestEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "description": "", "nullable": false },
          "storyName": {
            "type": "string",
            "description": "название истории",
            "nullable": false
          },
          "status": {
            "type": "string",
            "description": "статус заявки",
            "nullable": false
          },
          "comment": {
            "type": "string",
            "description": "комментарий проверяющего",
            "nullable": false
          },
          "userId": {
            "type": "number",
            "description": "ид пользователя, создавшего заявку",
            "nullable": false
          }
        },
        "required": ["id", "storyName", "status", "comment", "userId"]
      },
      "AddStoryRequestDto": {
        "type": "object",
        "properties": {
          "storyName": {
            "type": "string",
            "description": "название истории",
            "nullable": false
          },
          "id": {
            "type": "number",
            "description": "порядковый номер заявки",
            "nullable": false
          },
          "status": {
            "type": "string",
            "description": "статус заявки",
            "nullable": false,
            "enum": ["SEND", "SUCCESSED", "CANCELLED"]
          },
          "comment": {
            "type": "string",
            "description": "комментарий от проверяющего",
            "nullable": false
          }
        },
        "required": ["storyName", "id", "status", "comment"]
      },
      "CreateAddStoryRequestDto": {
        "type": "object",
        "properties": {
          "storyName": {
            "type": "string",
            "description": "название истории",
            "nullable": false
          }
        },
        "required": ["storyName"]
      },
      "EditAddStoryRequestDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "статус заявки берется является ENUM",
            "nullable": false,
            "enum": ["SEND", "SUCCESSED", "CANCELLED"]
          },
          "comment": {
            "type": "string",
            "description": "комментарий",
            "nullable": false
          }
        },
        "required": ["status", "comment"]
      }
    }
  },
  "security": [{ "JWT-Auth": [] }]
}
